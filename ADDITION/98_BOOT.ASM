;;; Boot sector code for PC-98
;;; Copyright 2022 Hideki EIRAKU <hdk_2@users.sourceforge.net>

; Permission is hereby granted, free of charge, to any person obtaining
; a copy of this software and associated documentation files (the
; "Software"), to deal in the Software without restriction, including
; without limitation the rights to use, copy, modify, merge, publish,
; distribute, sublicense, and/or sell copies of the Software, and to
; permit persons to whom the Software is furnished to do so, subject to
; the following conditions:
;
; The above copyright notice and this permission notice shall be
; included in all copies or substantial portions of the Software.
;
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
; EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
; MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
; NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
; LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
; OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
; WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

;;; Options
LOADSEG	EQU	200H
;DSKKiB	EQU	720
DSKKiB	EQU	1440
;DSKKiB	EQU	1232

IF DSKKiB EQ 720
	SECSIZ	EQU	512
	NSECCLS	EQU	2
	NSECRES	EQU	1
	NFATS	EQU	2
	NRDIR	EQU	112
	NSEC	EQU	1440
	MEDID	EQU	0F9H
	NSECFAT	EQU	3
	NSECTRK	EQU	9
	NHEADS	EQU	2
ENDIF
IF DSKKiB EQ 1440
	SECSIZ	EQU	512
	NSECCLS	EQU	1
	NSECRES	EQU	1
	NFATS	EQU	2
	NRDIR	EQU	224
	NSEC	EQU	2880
	MEDID	EQU	0F0H
	NSECFAT	EQU	9
	NSECTRK	EQU	18
	NHEADS	EQU	2
ENDIF
IF DSKKiB EQ 1232
	SECSIZ	EQU	1024
	NSECCLS	EQU	1
	NSECRES	EQU	1
	NFATS	EQU	2
	NRDIR	EQU	192
	NSEC	EQU	1232
	MEDID	EQU	0FEH
	NSECFAT	EQU	2
	NSECTRK	EQU	8
	NHEADS	EQU	2
ENDIF

A	SEGMENT
	ASSUME	CS:A
	ORG	0
START:
	JMP	MAIN
	ORG	3
	DB	'HIDOS   '
	DW	SECSIZ
	DB	NSECCLS
	DW	NSECRES
	DB	NFATS
	DW	NRDIR
	DW	NSEC
	DB	MEDID
	DW	NSECFAT
	DW	NSECTRK
	DW	NHEADS
	DW	0
	DW	0
	DW	0
	DW	0
	DB	0
	DB	0
	DB	0		; No extended boot signature
	DW	0
	DW	0
	DB	'           '
	DB	'FAT12   '

DSKERR	DB	'READ ERROR',0
FILEERR	LABEL BYTE
IO_FILENAME DB 	'IO      SYS'
	DB	' NOT FOUND',0
DISKBIOSNOERR PROC NEAR
	PUSH	BP
	PUSH	CX
	PUSH	DX
	MOV	BX,[BP+11]	; Sector size
	SHL	BX,1		; BH bit0- 128,256,512,1024,2048,4096,8192,16384
DISKBIOS_SECSIZLOOP:
	INC	BX
	SHR	BH,1
	JNE	DISKBIOS_SECSIZLOOP
	DEC	BX
	XCHG	BL,CH
	XCHG	BL,CL
	XCHG	BL,DL
	PUSH	DX
	PUSH	AX
	MOV	AH,0
	MUL	WORD PTR [BP+11] ; Sector size
	MOV	DX,BX
	XCHG	AX,BX
	POP	AX
	MOV	AL,DL
	POP	DX
	NEG	AH
	ADD	AH,46H+2	; AH=2:READ 46H AH=3:WRITE 45H
	TEST	AL,50H
	JE	DISKBIOS_NEW
	JPO	DISKBIOS_NEW
	TEST	AL,0A0H
	JNE	DISKBIOS_NEW
	;; For 2D drive machines... not tested at all!
	SUB	AH,40H		; Old command READ 6 WRITE 5
	JMP	SHORT DISKBIOS_OLD
DISKBIOS_NEW:
	PUSH	AX
	PUSH	CX
	;; Seek
	TEST	AL,90H
	JS	DISKBIOS_NOT2D	; 2HD (>= 80H)
	JE	DISKBIOS_NOT2D	; 00H, 20H, 40H, 60H
	TEST	AL,60H
	JPO	DISKBIOS_NOT2D	; 30H (2HD 300rpm), 50H
	CMP	BYTE PTR [BP+11+10],0FCH
	JB	DISKBIOS_NOT2D
	ADD	CL,CL		; 2D access with 2DD drive
DISKBIOS_NOT2D:
	MOV	AH,10H		; SEEK
	INT	1BH
	POP	CX
	POP	BP
	JC	DISKBIOS_RET
	XCHG	AX,BP
DISKBIOS_OLD:
	MOV	BP,DI
	INT	1BH
DISKBIOS_RET:
	JC	DISKBIOSERR
	POP	DX
	POP	CX
	POP	BP
	RET
DISKBIOSERR:
	MOV	SI,OFFSET DSKERR
ERRSTOP:
	MOV	DX,(0E1H SHL 8) OR ' '
	MOV	AH,16H		; Fill VRAM
	INT	18H
	MOV	AH,17H		; Start beep
	INT	18H
	MOV	AX,0A000H	; Text VRAM segment
	MOV	ES,AX
	XOR	DI,DI
	XOR	AX,AX
	CLD
ERRSTOP2:
	LODS	BYTE PTR CS:[SI]
	DB	0A8H		; TEST AL,immediate
ERRSTOP1:
	HLT			; 0F4H
	JE	ERRSTOP1
	STOSW
	JMP	ERRSTOP2
DISKBIOSNOERR ENDP

MAIN:
	MOV	AX,CS
	MOV	SS,AX
	MOV	SP,1024
	XOR	BP,BP
	MOV	ES,BP
	MOV	DL,ES:[584H]	; Boot drive
	MOV	AX,LOADSEG
	MOV	ES,AX
	XOR	DI,DI
	MOV	SI,OFFSET IO_FILENAME
	JMP	SHORT RDR_START
FILENOTFOUND:
	MOV	SI,OFFSET FILEERR
	JMP	ERRSTOP
	INCLUDE	FIL_RDR.ASM
	PUSH	ES		; Avoid debugging detection
	POP	DS		; and for relocation
	XOR	BX,BX
	PUSH	ES
	CMP	DS:[BX],'M' OR ('Z' SHL 8)
	JNE	NOTR
	;; Relocatable IO.SYS!
	;; Jump to the paragraph just after the header.
	;; Relocation will be done in IO.SYS.
	POP	AX
	ADD	AX,DS:[BX+8]	; Header size in paragraph
	PUSH	AX
NOTR:
	PUSH	BX
GOTO	PROC	FAR
	RET
GOTO	ENDP
	ORG	510
	DB	'98'		; Not used
A	ENDS
	END	START
